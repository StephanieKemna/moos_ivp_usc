// MOOS community specs
//CHECK: ip address shoreside laptop
//TODO: add to script
ServerHost = 192.168.10.16 //192.168.0.206 //1.117
ServerPort = 9000 //9100
Community  = shoreside //shoreside

// warp? (increase sim speed, ok as long as no process reads system time)
MOOSTimeWarp = 1 //1

// Location
// warp? (increase sim speed, ok as long as no process reads system time)
MOOSTimeWarp = 1

// Location ////////////////////////////////////////////////////////////////////

// Lake Arrowhead
LatOrigin = 34.246545
LongOrigin = -117.204077

// Santa Fe Reservoir

// Puddingstone Reservoir

////////////////////////////////////////////////////////////////////////////////


// Antler: list which processes to start
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  Run = MOOSDB        @ NewConsole = false
  Run = pLogger       @ NewConsole = false
  Run = uProcessWatch @ NewConsole = true

  // behaviors
  Run = pMarineViewer @ NewConsole = true
  
  Run = pShare        @ NewConsole = true
}

//--------------------------------------------------
// pLogger Configuration Block (Created from Plugin)

ProcessConfig = pLogger
{
  AppTick 	= 5
  CommsTick 	= 5
  
  File		= LOG_SHORESIDE
  PATH		= ./
  SyncLog 	= true @ 0.2
  AsyncLog 	= true
  FileTimeStamp = true

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 nosync
//  Log = APPCASE @ 0 NOSYNC

  BridgeFrequency = 0

  // Log everything, but process status
  WildCardLogging = true 
  WildCardOmitPattern = *_STATUS,DB_VARSUMMARY,DB_RWSUMMARY,DB_QOS,APPCAST
  LogAuxSrc = true
}


// visualization
//--------------------------------------------------------
// pMarineViewer (ivp): to render vehicles, history & info during sim & ops
// documentation: http://oceanai.mit.edu/moos-ivp-pdf/moosivp-helm.pdf
//
ProcessConfig = pMarineViewer
{
  AppTick    = 4
  CommsTick  = 4

  tiff_viewable = true
  tiff_file     = ../../../data/maps/lake_arrowhead17.tif

// puddingstone_all.tif //  AerialMIT.tif

//  // store the img for alogview
//  log_the_image = true

  // pan, zoom to be set for puddingstone file
  set_pan_x            = -540
  set_pan_y            = -833
  zoom                 = 1.5
  vehicles_shape_scale = 2.0
  vehicles_name_mode   = names+shortmode
  stale_vehicles_viewable = true

  seglist_viewable_labels = false
  marker_viewable_labels = false
  hash_viewable = true
  // do not start up comms visualization (overhead)
  comms_pulse_viewable_all = false

  appcast_viewable     = false //true
//  appcast_width = 30
//  appcast_color_scheme = indigo

  button_one   = DEPLOY_ALL  # DEPLOY_ALL=true 
  button_one   = MOOS_MANUAL_OVERIDE_ALL=false 
  button_one   = RETURN_ALL=false
  button_two   = RETURN_ALL  # RETURN_ALL=true
  button_three = TRAIL_ALL   # TRAIL_ALL=true
  
//  scope = NODE_REPORT,DB_TIME
}


//----------------------------------------------------------------------------
ProcessConfig = uProcessWatch
{
  AppTick   = 2
  CommsTick = 2

  WATCH = pLogger
  WATCH = pMarineViewer
  WATCH = pShare
}

//---------------------------------------------------------
// pShare Config Block  (Created from Plugin)

ProcessConfig = pShare
{
  AppTick    = 4
  CommsTick  = 4

  //CHECK: IP address shoreside laptop
  //TODO add to script
  input = route = 192.168.10.16:9400 //192.168.0.206:9400
      //& multicast_1

//  input = route =  localhost:9300 & multicast_1 & multicast_2
//  input = route =  127.0.0.1:9300 & multicast_1 & multicast_2

  // =======================================================
  // Usage Info below
  // =======================================================

  // Simple forward of X to A on channel 8
  // output = src_name = X,dest_name=A, route=multicast_8
 
  // Simple forward of Y to B on a udp address
  // output = src_name=Y, dest_name=B, route=localhost:9300
 
  // Simple forward of Z to Z on a named address (no renaming)
  // output = src_name = Z, route = oceanai.mit.edu:9020

  // Setting up an input
  // input = route = multicast_9
  // input = route = localhost:9300 & multicast_9

  // Setting up lots of inputs at once
  // input = route = "localhost:9069 & multicast_19 & multicast_65"

  // if in simulation, we want to pass the node_reports to pMarineViewer,
  // purely for visualization, then add this:
//  output = NODE_REPORT_LOCAL->NODE_REPORT:localhost:9400
//  output = VIEW_*->localhost:9400
  
  // temporary until acomms set up
  // share positions vehicles between one another
//  output = NODE_REPORT_LOCAL->NODE_REPORT:multicast_2
  // share allowable width with underwater vehicles
//  output = ALLOWABLE_WIDTH_FORM->ALLOWABLE_WIDTH:multicast_2
}

