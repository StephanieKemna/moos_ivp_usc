// set up input and output channels for sharing collected data.
// pGP publishes SHARE_DATA and should read it as INCOMING_DATA
//     publishes SEND_DATA_HANDSHAKE and should read it as RECEIVE_DATA_HANDSHAKE

input = route=$(SERVER_HOST):$(SHARE_LISTEN_GP)

// share between vehicles
#ifdef NR_VEHICLES 2
output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP2)
output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP2)
#endif
#ifdef NR_VEHICLES 3
output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP2)
output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP2)
output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP3)
output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP3)
#endif

#ifdef VNAME shub
  // share with other AUV
  #ifdef NR_VEHICLES 2
  output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP3)
  output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP3)
  #endif
  #ifdef NR_VEHICLES 3
  output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP3)
  output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP3)
  output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP4)
  output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP4)
  #endif
#else
  // share with surface hub
  output = src_name=SHARE_DATA, dest_name=INCOMING_DATA, route=$(SERVER_HOST):$(SHARE_GP_HUB)
  output = src_name=SEND_DATA_HANDSHAKE, dest_name=RECEIVE_DATA_HANDSHAKE, route=$(SERVER_HOST):$(SHARE_GP_HUB)
#endif
