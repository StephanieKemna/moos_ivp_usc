//****************************************************************************//
// initialize MOOS variables
//

// start with waiting
initialize  DEPLOY = false
initialize  MOOS_MANUAL_OVERRIDE=false

// set vars for mode structure
initialize  STAGE=survey

// quick fix opregion altitude requirement
initialize   NAV_ALTITUDE=100

//****************************************************************************//
// MODE structure for easier assigning behaviors to mission states
//
Set MODE = MISSION {
  DEPLOY = true
} NOT_DEPLOYED

Set MODE = SURVEY {
  MODE = MISSION
  STAGE = survey
}
Set MODE = SURVEY {
  MODE = MISSION
  STAGE = data_sharing
}
Set MODE = HP_OPTIM {
  MODE = MISSION
  STAGE = hpoptim
} RETURN

//****************************************************************************//
// Behaviors
//

//---------   Safety behaviors   -------------
// Run always when running behaviors
//

Behavior = BHV_OpRegionBounce
{
  // not really used, just some big square, because we want to
  // simulate sensing the environment rather than forcing constraints
  name = bhv_opregion_bounce
  pwt = 200
  duration = no-time-limit
  condition = MODE==MISSION

  polygon = $(OPREGION)
  max_depth = 20 // match with BHV_OpRegionBounceDepth
  min_altitude = 10
  max_time = 25200

  trigger_entry_time = 1.0
  trigger_exit_time = 1.0
  visual_hints = edge_size=2.0,vertex_size=2.0

  // bounce additions
  bounce_buffer = 20 // meters, when to start bouncing
  bounce_buffer_depth = 5 // meters, match with BHV_OpRegionBounceDepth
  no_zone_factor = .2
}

//---------   Control behaviors   -------------
// Separate high level control bhvs for separate parts of mission
//
Behavior = BHV_Waypoint
{
  name      = survey_start
  pwt       = 100
  condition = MODE==SURVEY
  perpetual = true

  speed = 1.5         // m/s

  radius = 5.0        // m
  slip_radius = 15.0  // m
  lead = 10           // m

  points = $(WAYPOINTS)
  order  = normal

  repeat = 0 // # times to repeat waypoints list

  visual_hints = nextpt_color=red, nextpt_lcolor=green
  visual_hints = vertex_color=yellow, edge_color=white
  visual_hints = vertex_size=3, edge_size=2
}

Behavior = BHV_Loiter
{
  name = loiter_hp_optim
  pwt = 100
  condition = MODE==HP_OPTIM
  perpetual = true

  speed = 1.5

  clockwise = true
  capture_radius = 2
  slip_radius = 5
  acquire_dist = 10  
  
  polygon = $(HP_LOITER)
}

// return //////////////////////////////////////////////////////////////////////
Behavior = BHV_Waypoint
{
  name       = bhv_waypt_return
  pwt        = 100
  condition  = MODE==RETURN
  perpetual  = true
  endflag    = RETURN = false
  endflag    = DEPLOY = false

  speed = 1.5
  radius = 2.0
  nm_radius = 8.0
  points = $(START_POS)
}
