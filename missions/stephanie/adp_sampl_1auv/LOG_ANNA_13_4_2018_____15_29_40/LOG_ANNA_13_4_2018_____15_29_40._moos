%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% LOG FILE:       ./LOG_ANNA_13_4_2018_____15_29_40/LOG_ANNA_13_4_2018_____15_29_40._moos
%% FILE OPENED ON  Wed Dec 31 16:00:00 1969
%% LOGSTART               4570975739.95
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//*******************************************************
// Vehicle Configuration File
//

// MOOS community specs
NoNetwork = true
ServerHost = localhost
ServerPort = 9001
// Community name IS the vehicle name
Community  = anna

// warp the simulation?
// warp? (increase sim speed, ok as long as no process reads system time)
MOOSTimeWarp = 3

// Location ////////////////////////////////////////////////////////////////////

// Lake Arrowhead

// Santa Fe Reservoir

// Puddingstone Reservoir
LatOrigin = 34.0784000000111
LongOrigin = -117.815

// SCMI San Pedro / Long Beach

////////////////////////////////////////////////////////////////////////////////


//------------------------------------------------------------
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  // moos db, moos util apps
  Run = MOOSDB             @ NewConsole = false
  Run = pLogger            @ NewConsole = false
  Run = uProcessWatch      @ NewConsole = true

  // vehicle sim
  Run = uSimMarine         @ NewConsole = false
  Run = pMarinePID         @ NewConsole = false

  // behaviors
  Run = pHelmIvP           @ NewConsole = false

  // generate 'node reports'
  Run = pNodeReporter      @ NewConsole = false

  Run = pHostInfo @ NewConsole = false ~ pHostInfo
  Run = uFldNodeBroker @ NewConsole = false
  Run = uFldMessageHandler @ NewConsole = false

  Run = pShare @ NewConsole = false

  Run = uSimBioSensor @ NewConsole = false

  Run = pGP_AUV @ NewConsole = false

  Run = pSamplePoints @ NewConsole = false ~ pSamplePoints_plan
  Run = pSamplePoints @ NewConsole = false ~ pSamplePoints_predict

  Run = pLonLatToWptUpdate @ NewConsole = false

  Run = uTimerScript @ NewConsole = false
  Run = pPublishAfterX @ NewConsole = false
}
//------------------------------------------------------------

// utils
//--------------------------------------------------
// pLogger Configuration Block (Created from Plugin)

ProcessConfig = pLogger
{
  AppTick 	= 5
  CommsTick 	= 5
  
  File		= LOG_ANNA
  PATH		= ./
  SyncLog 	= true @ 0.2
  AsyncLog 	= true
  FileTimeStamp = true

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC
//  Log = APPCASE @ 0 NOSYNC

  BridgeFrequency = 0

  // Log everything, but process status
  WildCardLogging = true
  //*_STATUS 
  WildCardOmitPattern = DB_VARSUMMARY,DB_RWSUMMARY,DB_QOS,APPCAST
  LogAuxSrc = true
}

//--------------------------------------------------------
// uProcessWatch Configuration Block
//
ProcessConfig = uProcessWatch
{
  AppTick   = 2
  CommsTick = 2
  
  NOWATCH = uXMS*
  NOWATCH = uMS*

  WATCH_ALL = true

  WATCH  = uSimMarine
  WATCH  = pMarinePID
  WATCH  = pShare*
  WATCH  = pLogger
  WATCH  = pNodeReporter
  WATCH  = pHelmIvP
}


// vehicle simulation
//------------------------------------------------------
// uSimMarine Configuration Block  (Created from plugin)
//
// uSimMarine (ivp): very simple 3D vehicle simulator that considers the current
//        vehicle pose and actuator commands and produces a new vehicle pose
// documentation: http://oceanai.mit.edu/moos-ivp-pdf/moosivp-tools.pdf
//
ProcessConfig = uSimMarine
{
  AppTick   = 10
  CommsTick = 10

  PREFIX    = NAV
  // specify a start position
  START_POS = 430,950, 135, 0

//  // external forces
//  force_x       = 0
//  force_y       = 0
//  force_theta   = 0
//  force_vector  = 0,0 // heading, magnitude

//  // vehicle dynamics
//  buoyancy_rate        = 0.025 // meters/sec
//  max_acceleration     = 0     // meters/sec^2
//  max_deceleration     = 0.5   // meters/sec^2
//  max_depth_rate       = 0.5   // meters/sec
//  max_depth_rate_speed = 2.0   // meters/sec
  BUOYANCY_RATE    = 0.025
  MAX_DEPTH_RATE = 0.5
  MAX_DEPTH_RATE_SPEED = 2.0

//  sim_pause            = false // or {true}
//  dual_state           = false // or {true}
//  thrust_reflect       = false // or {true}
//  thrust_factor        = 20    // range [0,inf)
//  turn_rate            = 70    // range [0,100]
//  thrust_map           = 0:0, 20:1, 40:2, 60:3, 80:5, 100:5
}


//-----------------------------------------------------
// pMarinePID Configuration Block (created from plugin)
//
// pMarinePID (ivp): simple PID controller which produces values suitable for
//        actuator control based on inputs from the helm. In simulation the
//        output is consumed by the vehicle simulator rather than the vehicle
//        actuators.
// documentation: none currently
//
ProcessConfig = pMarinePID
{
  AppTick    = 10
  CommsTick  = 10
  
  VERBOSE       = false
  ACTIVE_START  = true

  DEPTH_CONTROL = true

  sim_instability = 0     // Range [0,inf)
  tardy_helm_threshold = 2.0
  tardy_nav_threshold  = 2.0

  // Yaw PID controller
  YAW_PID_KP             = 0.4
  YAW_PID_KD             = 0.1
  YAW_PID_KI             = 0.0
  YAW_PID_INTEGRAL_LIMIT = 0.07
  
  // Speed PID controller
  SPEED_PID_KP           = 1.0
  SPEED_PID_KD           = 0.0
  SPEED_PID_KI           = 0.0
  SPEED_PID_INTEGRAL_LIMIT = 0.07
  
  //Pitch PID controller
  PITCH_PID_KP                   = 0.5
  PITCH_PID_KD                   = 1.0
  PITCH_PID_KI                   = 0
  PITCH_PID_INTEGRAL_LIMIT       = 0

  //ZPID controller
  Z_TO_PITCH_PID_KP              = 0.12
  Z_TO_PITCH_PID_KD              = 1.0 //0
  Z_TO_PITCH_PID_KI              = 0.004
  Z_TO_PITCH_PID_INTEGRAL_LIMIT  = 0.05

  MAXPITCH     = 15
  MAXELEVATOR  = 13

  // Maximums
  MAXRUDDER  = 100
  MAXTHRUST  = 100
  
  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  SPEED_FACTOR = 20
}


// behaviors
//----------------------------------------------------
// pHelmIvP Configuration Block

ProcessConfig = pHelmIvP
{
  AppTick    = 4
  CommsTick  = 4
  
  Behaviors    = targ_anna.bhv  
  Verbose      = quiet // verbose, terse, quiet
  
  Domain       = course:0:359:360

  // EcoMapper max speed ca 2 m/s
  Domain       = speed:0:2.0:21 //1.7:18//2:21
  // EcoMapper max depth ca 200 ft ~ 61m
  Domain       = depth:0:50:101
}


// generate 'node reports'
//--------------------------------------------------------
// pNodeReporter Configuration Block (Created from Plugin)
// pNodeReporter (ivp): generates 'node-report' (proxy for AIS) for pMarineViewer
// documentation: http://oceanai.mit.edu/moos-ivp-pdf/moosivp-tools.pdf
//
ProcessConfig = pNodeReporter
{
  AppTick     = 5
  CommsTick   = 5
  
  VESSEL_TYPE = UUV
  
  // use a group to enable group broadcast in inter-vehicle messaging
  group = survey
}


// comms to shoreside
//--------------------------------------------------
// pHostInfo configuration block from plugin

ProcessConfig = pHostInfo
{
  AppTick   = 1
  CommsTick = 1

  default_hostip = localhost
  temp_file_dir = ./            // default is ~/
}


//--------------------------------------------------
// uFldNodeBroker configuration block from plugin

ProcessConfig = uFldNodeBroker
{
  AppTick   = 1
  CommsTick = 1

//  TRY_SHORE_HOST = pshare_route=multicast_9
  TRY_SHORE_HOST = pshare_route=localhost:9300 // & multicast_1//9301
//  TRY_SHORE_HOST = pshare_route=multicast_1

  BRIDGE = src=VIEW_POLYGON
//  BRIDGE = src=VIEW_POINT
  BRIDGE = src=VIEW_SEGLIST
//  BRIDGE = src=APPCAST
  BRIDGE = src=NODE_REPORT_LOCAL,  alias=NODE_REPORT
  BRIDGE = src=NODE_MESSAGE_LOCAL, alias=NODE_MESSAGE
}

//--------------------------------------------------
// uFldMessageHandler configuration block from plugin

ProcessConfig = uFldMessageHandler
{
  AppTick   = 3
  CommsTick = 3

  STRICT_ADDRESSING = false
}

//---------------------------------------------------------
// pShare Config Block  (Created from Plugin)

ProcessConfig = pShare
{
  AppTick    = 4
  CommsTick  = 4

  input = route =  localhost:9301
      //& multicast_1

// set up input and output channels for sharing collected data.

input = route=localhost:9401


//  input = route =  localhost:9301 & multicast_1 & multicast_2
//  input = route =  127.0.0.1:9301 & multicast_1 & multicast_2

  // =======================================================
  // Usage Info below
  // =======================================================

  // Simple forward of X to A on channel 8
  // output = src_name = X,dest_name=A, route=multicast_8
 
  // Simple forward of Y to B on a udp address
  // output = src_name=Y, dest_name=B, route=localhost:9300
 
  // Simple forward of Z to Z on a named address (no renaming)
  // output = src_name = Z, route = oceanai.mit.edu:9020
 
  // Setting up an input
  // input = route = multicast_9
  // input = route = localhost:9301 & multicast_9

  // Setting up lots of inputs at once
  // input = route = "localhost:9069 & multicast_19 & multicast_65"

  // if in simulation, we want to pass the node_reports to pMarineViewer,
  // purely for visualization, then add this:
//  output = NODE_REPORT_LOCAL->NODE_REPORT:127.0.0.1:9300 //localhost:9300 //9300 is shoreside
//  output = VIEW_*->127.0.0.1:9300//localhost:9300
  
  // temporary until acomms set up
  // share positions vehicles between one another
//  output = NODE_REPORT_LOCAL->NODE_REPORT:multicast_2
  // share allowable width with underwater vehicles
//  output = ALLOWABLE_WIDTH_FORM->ALLOWABLE_WIDTH:multicast_2
}


// add other processes here
//--------------------------------------------------
// uSimBioSensor configuration block
//
ProcessConfig = uSimBioSensor
{
  AppTick   = 2
  CommsTick = 2

  // verbosity: true or false
  verbose = false

  // process parameters
  input_filename = test.csv
  variance = 1.5
  output_var = SIM_DATA
}



//--------------------------------------------------
// pGP_AUV configuration block
//
ProcessConfig = pGP_AUV
{
  AppTick   = 2
  CommsTick = 2

  // verbose: true or false
  verbose = true

  // GP or log GP?
  use_log_gp = true

  // define the names of input variables
  input_var_data = SIM_DATA
  input_var_sample_points = SAMPLE_POINTS
  input_var_sample_points_specs = SAMPLE_POINTS_SPECS
  input_var_predict_points = SAMPLE_POINTS_PREDICT

  output_var_predictions = GP_PREDICTIONS

  // define the filename for saving GP predictions
  output_filename_prefix = anna_predictions

  // define the prediction interval (predict every X seconds)
    prediction_interval = 300

  // od and td
  // prediction_interval = 300
  // bigger2
  prediction_interval = 600

  // run in adaptive mode?
  adaptive = true

  area_buffer = 5

  // take one in X data points for HP optimization
  downsample_factor = 4

  // specify method of hyperparameter optimization ('cg' vs 'rprop')
  // default: rprop
  hp_optim_method = cg

  // number of iterations for CG/RProp
  hp_optim_iterations = 50

  // choice of path planning method, and their parameters
  // options: greedy, recursive_greedy, dynamic_programming
  path_planning_method = ftc_a*
  path_planning_horizon = 10

  // use WPT_INDEX for recursive_greedy/dynamic_programming
  // use WPT_CYCLE_FINISHED for greedy
  input_var_adaptive_trigger = WPT_CYCLE_FINISHED
}

//--------------------------------------------------
// pSamplePoints configuration block
//
ProcessConfig = pSamplePoints_plan
{
  AppTick   = 2
  CommsTick = 2

  // potential process parameters would go here
  lawnmower_config = format=lawnmower,x=700,y=1100,width=400,height=200,lane_width=40,degs=0,startx=0,starty=0

  // division factor for grid spacing (increase resolution vs lawnmower spec)
  division_factor = 2 // 40/2=20 -> 21x11=231 pts

  // define what output variable name to use
  // for publishing list of sample points
  output_var = SAMPLE_POINTS

  // define what output variable name to use
  // for publishing sample points grid spec
  output_var_specs = SAMPLE_POINTS_SPECS
}

//--------------------------------------------------
// pSamplePoints configuration block
//
ProcessConfig = pSamplePoints_predict
{
  AppTick   = 2
  CommsTick = 2

  // potential process parameters would go here
  lawnmower_config = format=lawnmower,x=700,y=1100,width=400,height=200,lane_width=40,degs=0,startx=0,starty=0

  // division factor for grid spacing (increase resolution vs lawnmower spec)
  division_factor = 4 // 40/4=10 --> 41x21=861 pts

  // define what output variable name to use
  // for publishing list of sample points
  output_var = SAMPLE_POINTS_PREDICT

  // define what output variable name to use
  // for publishing sample points grid spec
  output_var_specs = SAMPLE_POINTS_PREDICT_SPECS
}

//--------------------------------------------------
// pLonLatToWptUpdate configuration block
//
ProcessConfig = pLonLatToWptUpdate
{
  AppTick   = 2
  CommsTick = 2

  // specify variable names
  input_var_lonlat = GP_PREDICTIONS
  output_var_wpt_update = ADAPTIVE_WPT_UPDATES
}

//--------------------------------------------------
// pPublishAfterX configuration block
//
ProcessConfig = pPublishAfterX
{
  AppTick   = 2
  CommsTick = 2

  // which var/val to monitor
  publish_after_var = DEPLOY
  publish_after_val = true

  // how many seconds after above var/val should we publish?

    publish_after_secs = 6400:6450 //TODO update

  //bigger2
  publish_after_secs = 22250:22270

  // the var/val set to publish
  publish_var = MISSION_TIME
  publish_val = end

  // skip first message?
  skip_first = false
}



