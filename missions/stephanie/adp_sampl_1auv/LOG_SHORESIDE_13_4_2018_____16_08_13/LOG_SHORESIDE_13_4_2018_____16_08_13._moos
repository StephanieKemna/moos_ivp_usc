%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% LOG FILE:       ./LOG_SHORESIDE_13_4_2018_____16_08_13/LOG_SHORESIDE_13_4_2018_____16_08_13._moos
%% FILE OPENED ON  Wed Dec 31 16:00:00 1969
%% LOGSTART               4570982681.32
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//*******************************************************
// ShoreSide Configuration File
// basically a community for visualization of the simulation
// and simulating water medium
//

NoNetwork = true
ServerHost = localhost
ServerPort = 9000
Community  = shoreside

log_path = ../logs/simulation
log = true

// warp? (increase sim speed, ok as long as no process reads system time)
MOOSTimeWarp = 3

// Location ////////////////////////////////////////////////////////////////////

// Lake Arrowhead

// Santa Fe Reservoir

// Puddingstone Reservoir
LatOrigin = 34.0784000000111
LongOrigin = -117.815

// SCMI San Pedro / Long Beach

////////////////////////////////////////////////////////////////////////////////

  
//--------------------------------------------------------
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 100

  // moosdb, moos util apps
  Run = MOOSDB           @ NewConsole = false
  Run = pLogger          @ NewConsole = false
  // check own IP and publish to MOOSDB
  Run = pHostInfo @ NewConsole = false ~ pHostInfo
  Run = uFldShoreBroker @ NewConsole = false ~ uFldShoreBroker
  Run = uFldNodeComms @ NewConsole = false ~ uFldNodeComms
  Run = pShare @ NewConsole = false ~ pShare

  // shoreside visualization
  Run = pMarineViewer    @ NewConsole = true
  ///~ pMarineViewer_shorebroker

  // paint extra polygons etc
  Run = uTimerScript     @ NewConsole = false

  // debugging
//  Run = uMS @ NewConsole = false
}

// utils
//--------------------------------------------------
// pLogger Configuration Block (Created from Plugin)

ProcessConfig = pLogger
{
  AppTick 	= 5
  CommsTick 	= 5
  
  File		= LOG_SHORESIDE
  PATH		= ./
  SyncLog 	= true @ 0.2
  AsyncLog 	= true
  FileTimeStamp = true

  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC
//  Log = APPCASE @ 0 NOSYNC

  BridgeFrequency = 0

  // Log everything, but process status
  WildCardLogging = true
  //*_STATUS 
  WildCardOmitPattern = DB_VARSUMMARY,DB_RWSUMMARY,DB_QOS,APPCAST
  LogAuxSrc = true
}


// processes for simulation acoustic communications, incl. range limits
//--------------------------------------------------
// pHostInfo configuration block from plugin

ProcessConfig = pHostInfo
{
  AppTick   = 1
  CommsTick = 1

  default_hostip = localhost
  temp_file_dir = ./            // default is ~/
}



//#include ../../../plugs/plug_uFldShoreBroker.moos
//#include ../../../plugs/plug_uFldNodeComms.moos
//--------------------------------------------------
// uFldShoreBroker Configuration Block
//
ProcessConfig = uFldShoreBroker
{
  AppTick       = 1
  CommsTick     = 1

  // quick bridge; all starting with:
  qbridge  = DEPLOY, RETURN, NODE_MESSAGE
}



//---------------------------------------------------------
// pShare Config Block  (Created from Plugin)

ProcessConfig = pShare
{
  AppTick    = 4
  CommsTick  = 4

  input = route =  localhost:9300
      //& multicast_1


//  input = route =  localhost:9300 & multicast_1 & multicast_2
//  input = route =  127.0.0.1:9300 & multicast_1 & multicast_2

  // =======================================================
  // Usage Info below
  // =======================================================

  // Simple forward of X to A on channel 8
  // output = src_name = X,dest_name=A, route=multicast_8
 
  // Simple forward of Y to B on a udp address
  // output = src_name=Y, dest_name=B, route=localhost:9300
 
  // Simple forward of Z to Z on a named address (no renaming)
  // output = src_name = Z, route = oceanai.mit.edu:9020
 
  // Setting up an input
  // input = route = multicast_9
  // input = route = localhost:9300 & multicast_9

  // Setting up lots of inputs at once
  // input = route = "localhost:9069 & multicast_19 & multicast_65"

  // if in simulation, we want to pass the node_reports to pMarineViewer,
  // purely for visualization, then add this:
//  output = NODE_REPORT_LOCAL->NODE_REPORT:127.0.0.1:9300 //localhost:9300 //9300 is shoreside
//  output = VIEW_*->127.0.0.1:9300//localhost:9300
  
  // temporary until acomms set up
  // share positions vehicles between one another
//  output = NODE_REPORT_LOCAL->NODE_REPORT:multicast_2
  // share allowable width with underwater vehicles
//  output = ALLOWABLE_WIDTH_FORM->ALLOWABLE_WIDTH:multicast_2
}

//_shoreside.moos

// visualization
//--------------------------------------------------------
// pMarineViewer (ivp): to render vehicles, history & info during sim & ops
// documentation: http://oceanai.mit.edu/moos-ivp-pdf/moosivp-helm.pdf
//
ProcessConfig = pMarineViewer
{
  AppTick    = 4
  CommsTick  = 4

  tiff_viewable = true
  tiff_file     = ../../../data/maps/puddingstone_all.tif

//  // store the img for alogview
//  log_the_image = true

  // pan, zoom to be set for puddingstone file
  set_pan_x = 1800
  set_pan_y = -845
  zoom      = 0.55
  vehicles_shape_scale = 2.0
  vehicles_name_mode   = names+shortmode
  stale_vehicles_viewable = true

  seglist_viewable_labels = false
  marker_viewable_labels = false
  hash_viewable = true
  // do not start up comms visualization (overhead)
  comms_pulse_viewable_all = false

  appcast_viewable     = false //true
//  appcast_width = 30
//  appcast_color_scheme = indigo

  button_one   = DEPLOY_ALL  # DEPLOY_ALL=true 
  button_one   = MOOS_MANUAL_OVERIDE_ALL=false 
  button_one   = RETURN_ALL=false
  button_two   = RETURN_ALL  # RETURN_ALL=true
  button_three = TRAIL_ALL   # TRAIL_ALL=true
  
//  scope = NODE_REPORT,DB_TIME
}


ProcessConfig = uTimerScript
{
  AppTick = 4
  CommsTick = 4

  verbose = true

  // show survey area in pMarineViewer
  event = var=VIEW_SEGLIST,val="pts={500,1200:500,1000:900,1000:900,1200:500,1200},label=survey_area,label_color=white,edge_color=yellow,vertex_color=yellow,vertex_size=3,edge_size=3",time=10

  reset_max = nolimit
//  reset_time = all-posted
  reset_var = UTS_RESET

  status_var = UTS_STATUS

  time_warp=3
}


