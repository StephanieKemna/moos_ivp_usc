// MOOS community specs (doesn't matter for unit test)
ServerHost = 192.168.10.11
ServerPort = 6000
Community  = hil_zoomer

// warp? (increase sim speed, ok as long as no process reads system time)
MOOSTimeWarp = 1

// Location (doesn't matter for unit test)
LatOrigin  = 34.020026
LongOrigin = -118.290083

//****************************************************************************//
// Base Processes
//

// Antler: list which processes to start
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 200

  Run = MOOSDB        @ NewConsole = false
  Run = pLogger       @ NewConsole = false

  Run = pGP_AUV @ NewConsole = false
}

// Logging tool (MOOSEssentials)
ProcessConfig = pLogger
{
  AppTick   = 8
  CommsTick = 8

  Path = ./
  AsyncLog = true
  FileTimeStamp = true

  BridgeFrequency = 0
  // For variables that are published in a bundle on their first post,
  // explicitly declare their logging request
  Log = IVPHELM_LIFE_EVENT @ 0 NOSYNC

  // Log everything
  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = DB_VARSUMMARY, DB_RWSUMMARY, APPCAST
  WildCardExclusionLog = true
}

//****************************************************************************//
// TESTING

// pGP
ProcessConfig = pGP_AUV
{
  AppTick   = 2
  CommsTick = 2

  // verbose: true or false
  verbose = true

  // GP or log GP?
  use_log_gp = true

  // define the names of input & output variables
  input_var_data = SIM_DATA
  input_var_sample_points = SAMPLE_POINTS
  input_var_sample_points_specs = SAMPLE_POINTS_SPECS
  input_var_adaptive_trigger = WPT_REACHED
  input_var_share_data = INCOMING_DATA
  output_var_predictions = GP_PREDICTIONS
  output_var_share_data = SHARE_DATA

  // define the filename for saving GP predictions
  output_filename_prefix = predictions

  // define the prediction interval (predict every X seconds)
  prediction_interval = 300

  // number of vehicles (data exchange?)
  nr_vehicles = 1

  // run in adaptive mode?
  adaptive = true

  // elementary coordination (implicit): share data at set intervals
  timed_data_sharing = false
  // interval between data sharing events (seconds)
  data_sharing_interval = 600
  // vars for data sharing
  output_var_handshake_data_sharing = SEND_DATA_HANDSHAKE
  input_var_handshake_data_sharing = RECEIVE_DATA_HANDSHAKE

  // data sharing through acomms
  acomms_sharing = false

  // use voronoi partitioning?
  use_voronoi = false
  // minimum timeout between voronoi calculations (sec)
  voronoi_timeout = 300

  // take one in X data points for HP optimization
  downsample_factor = 4

  // buffer region outside sample area for which
  // vehicle is still counted as inside, for voronoi partitioning
  area_buffer = 10.0

  // specify method of hyperparameter optimization ('cg' vs 'rprop')
  hp_optim_method = cg

  // number of iterations for CG/RProp
  hp_optim_iterations = 50
}

