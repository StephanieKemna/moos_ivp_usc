NoNetwork = true
ServerHost = localhost
ServerPort = $(VPORT)
Simulator  = true

modem_id_lookup_path = ../../cruise/current/data/modemidlookup.txt
modem_id = $(MODEMID)

// Community name IS the vehicle name
Community  = $(VNAME)

// warp the simulation?
#include plug_origin_warp.moos

//------------------------------------------------------------
Processconfig = ANTLER
{
  MSBetweenLaunches = 100

  // moos db, moos util apps
  Run = MOOSDB             @ NewConsole = false
  Run = pLogger            @ NewConsole = false
  Run = uProcessWatch      @ NewConsole = false
  // check own IP and publish to MOOSDB
  Run = pHostInfo          @ NewConsole = false

  // vehicle sim
  Run = uSimMarine         @ NewConsole = false
  Run = pMarinePID         @ NewConsole = false

  // behaviors
  Run = pHelmIvP           @ NewConsole = false

  // generate 'node reports'
  Run = pNodeReporter      @ NewConsole = false

  // collision avoidance
  Run = pBasicContactMgr   @ NewConsole = false

  Run = pShare             @ NewConsole = false

  // formation control
#ifdef VTYPE UUV
  Run = pSelectFormation @ NewConsole = false
  Run = pPositionInFormation @ NewConsole = false
  Run = pFormationWptUpdater @ NewConsole = false
#endif
#ifdef VTYPE SHIP
  Run = pMaxFormationWidth @ NewConsole = false
#endif

  Run = uTimerScript @ NewConsole = false

//  // inter-vehicle comms via shoreside, not same as acomms, all comms routed
//  // via shoreside, bit odd, but allows for testing comms dropouts etc.
//  Run = uFldNodeBroker     @ NewConsole = false
//  Run = uFldMessageHandler @ NewConsole = false

//  // need to add acomms later
//  pAcommsHandlerConfig = -geometry,179x100+0+20
//  Run = pAcommsHandler @ NewConsole=true,XConfig=pAcommsHandlerConfig ~ pAcommsHandler
}
//------------------------------------------------------------

// utils
#include plug_pLogger.moos
#include plug_uProcessWatch.moos
#include plug_pHostInfo.moos

// vehicle simulation
#include plug_uSimMarine.moos
#include plug_pMarinePID.moos

// behaviors
#include plug_pHelmIvP.moos

// generate 'node reports'
#include plug_pNodeReporter.moos

// for simulation, to display vehicle positions and markers
#include plug_pShare.moos

// collision avoidance
// node_reports are passed via uFldNodeBroker and pShare through shoreside
#include plug_pBasicContactMgr.moos

// formation control
#ifdef VTYPE UUV
#include plug_pSelectFormation.moos
#include plug_pPositionInFormation.moos
#include plug_pFormationWptUpdater.moos
#endif
#ifdef VTYPE SHIP
#include plug_pMaxFormationWidth.moos
#endif

// publish some vars so I don't have to poke them
// replace later with process for calculating allowable height
// and a process to determined the number of vehicles based on
// received status updates
#include plug_uTimerScript.moos

//// inter-vehicle comms via shoreside
//#include plug_uFldNodeBroker.moos
//#include plug_uFldMessageHandler.moos

//// inter-vehicle comms via acomms
//// acomms, via Toby -- goby2 & pAcommsHandler
//#include plug_pAcommsHandler.moos
