/*****************************************************************/
/*    Name: Stephanie Kemna (SK) <kemna@nurc.nato.int>           */
/*    Organization: NATO Undersea Research Centre, La Spezia, IT */
/*    File: BHV_OpRegionBounceDepth.plug                         */
/*    Date: May 11th, 2011                                       */
/*          Adaptation of BHV_OpRegion                           */
/*                                                               */
/*    Copyright (C) 2011  NURC                                   */
/*                                                               */
/* This program is free software; you can redistribute it and/or */
/* modify it under the terms of the GNU General Public License   */
/* as published by the Free Software Foundation; either version  */
/* 3 of the License, or (at your option) any later version.      */
/*                                                               */
/* This program is distributed in the hope that it will be       */
/* useful, but WITHOUT ANY WARRANTY; without even the implied    */
/* warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR       */
/* PURPOSE. See the GNU General Public License for more details. */
/*                                                               */
/* You should have received a copy of the GNU General Public     */
/* License along with this program.                              */
/* If not, see <http://www.gnu.org/licenses/                     */
/*                                                               */
/*****************************************************************/
/*                                                               */
/* BHV_OpRegionBounce:                                           */
/*  Instead of setting speed to 0 when we hit the OpRegion or    */
/*  altitude limits, we want the vehicle to bounce back into     */
/*  the OpArea: change heading (and/or depth)                    */
/*                                                               */
/*****************************************************************/

#ifndef _BHV_OpRegionBounce_name
  #define _BHV_OpRegionBounce_name BHV_OpRegionBounce
#endif
#ifndef _BHV_OpRegionBounce_pwt
  #define _BHV_OpRegionBounce_pwt 1000
#endif
#ifndef _BHV_OpRegionBounce_duration
  #define _BHV_OpRegionBounce_duration no-time-limit
#endif

#ifndef _BHV_OpRegionBounce_condition 
  #define _BHV_OpRegionBounce_condition (SAFETY = true)
#endif

#ifndef _BHV_OpRegionBounce_polygon
  #warning _BHV_OpRegionBounce_polygon not set
#endif
#ifndef _BHV_OpRegionBounce_max_depth
  #warning _BHV_OpRegionBounce_max_depth not set
#endif
#ifndef _BHV_OpRegionBounce_min_altitude
  #warning _BHV_OpRegionBounce_min_altitude not set
#endif
#ifndef _BHV_OpRegionBounce_max_time
  #define _BHV_OpRegionBounce_max_time 23400 // 6.5 hours
#endif

#ifndef _BHV_OpRegionBounce_trigger_entry_time
  #define _BHV_OpRegionBounce_trigger_entry_time 1.0
#endif
#ifndef _BHV_OpRegionBounce_trigger_exit_time
  #define _BHV_OpRegionBounce_trigger_exit_time 1.0
#endif
#ifndef _BHV_OpRegionBounce_edge_size
  #define _BHV_OpRegionBounce_edge_size 2.0
#endif
#ifndef _BHV_OpRegionBounce_vertex_size
  #define _BHV_OpRegionBounce_vertex_size 2.0
#endif

#ifndef _BHV_OpRegionBounce_bounce_buffer
  #define _BHV_OpRegionBounce_bounce_buffer
#endif
#ifndef _BHV_OpRegionBounce_bounce_buffer_depth
  #define _BHV_OpRegionBounce_bounce_buffer_depth
#endif
#ifndef _BHV_OpRegionBounce_no_zone_factor
  #define _BHV_OpRegionBounce_no_zone_factor
#endif
Behavior = BHV_OpRegionBounce
{
  name = _BHV_OpRegionBounce_name
  pwt  = _BHV_OpRegionBounce_pwt
  duration = _BHV_OpRegionBounce_duration

  condition = _BHV_OpRegionBounce_condition

  polygon = _BHV_OpRegionBounce_polygon
// possibility to add second polygon (for whatever reason, it works..)
#ifdef _BHV_OpRegionBounce_polygon2
  polygon = _BHV_OpRegionBounce_polygon2
#endif
  max_depth = _BHV_OpRegionBounce_max_depth
  min_altitude = _BHV_OpRegionBounce_min_altitude
  max_time = _BHV_OpRegionBounce_max_time

  trigger_entry_time = _BHV_OpRegionBounce_trigger_entry_time
  trigger_exit_time = _BHV_OpRegionBounce_trigger_exit_time
  visual_hints = edge_size=_BHV_OpRegionBounce_edge_size,vertex_size=_BHV_OpRegionBounce_vertex_size

  // if these are not set, buffers are set to 0, which is in fact inactive
  // bounce_buffer: size of the buffer inside the vertex for bouncing
  bounce_buffer = _BHV_OpRegionBounce_bounce_buffer
  // bounce_buffer_depth: size of the buffer for depth bouncing
  bounce_buffer_depth = _BHV_OpRegionBounce_bounce_buffer_depth
  // no_zone_factor: used for: no_zone = buffer * no_zone_factor
  no_zone_factor = _BHV_OpRegionBounce_no_zone_factor
}
